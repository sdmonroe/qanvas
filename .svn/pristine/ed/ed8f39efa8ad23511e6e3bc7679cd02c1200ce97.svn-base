package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class service_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static java.util.List _jspx_dependants;

  public Object getDependants() {
    return _jspx_dependants;
  }

  public void _jspService(HttpServletRequest request, HttpServletResponse response)
        throws java.io.IOException, ServletException {

    JspFactory _jspxFactory = null;
    PageContext pageContext = null;
    HttpSession session = null;
    ServletContext application = null;
    ServletConfig config = null;
    JspWriter out = null;
    Object page = this;
    JspWriter _jspx_out = null;
    PageContext _jspx_page_context = null;


    try {
      _jspxFactory = JspFactory.getDefaultFactory();
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;


	
	String path = request.getParameter("path");
	String viewType = request.getParameter("viewType");
	String offset = request.getParameter("offset");
	String limit = request.getParameter("limit");
	String reload = request.getParameter("reload");
	String tid = request.getParameter("tid");
	String smid = request.getParameter("smid");
	String webid = request.getParameter("webid");
	String append = request.getParameter("append");
	String datatype = request.getParameter("datatype");
	String maximize = request.getParameter("maximize");

	org.qanvas.CanvasView cv = new org.qanvas.CanvasView();
	cv.setViewType(viewType);
	cv.setPath(path);
	cv.setTargetId(tid);
	cv.setSourceModuleId(smid);
	if(request.getParameter("offset") != null) cv.setOffset(Integer.parseInt(offset));
	if(request.getParameter("limit") != null) cv.setLimit(Integer.parseInt(limit));
	if(request.getParameter("reload") != null) cv.setReload(request.getParameter("reload").equals("true"));
	if(request.getParameter("fr") != null) cv.setForcedReverse(request.getParameter("fr").equals("true"));
	if(datatype != null) cv.setDatatype(datatype);
	if(maximize != null) cv.setMaximize(maximize.equals("true"));
	cv.setAppend(append != null);
	if(path != null && path.length() > 0){
		response.setContentType("text/xml");
		String resolver = org.qanvas.GGGPathResolver.getViewData(cv, webid);
		out.write(resolver);
		return;
	}


      out.write('\r');
      out.write('\n');
    } catch (Throwable t) {
      if (!(t instanceof SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          out.clearBuffer();
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
      }
    } finally {
      if (_jspxFactory != null) _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
